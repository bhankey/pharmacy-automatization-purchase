syntax = "proto3";

package purchaseService;
option go_package = "api/purchaseproto";

import "validate/validate.proto";
import "google/protobuf/empty.proto";

// For error handling use "google.golang.org/grpc/status"
message ReserveItemRequest {
  int64 pharmacy_id = 1;
  string item_name = 2;
  string position = 3;
  string purchase_uuid = 4;
}

message GetReservationRequest {
  int64 pharmacy_id = 1;
  string purchase_uuid = 2;
  bool is_social_card = 3;
}

message BuyReservationRequest {
  int64 user_id = 1;
  int64 pharmacy_id = 2;
  string purchase_uuid = 3;
  bool is_social_card = 4;
}

message Reservation {
  repeated ReservationProductInfo items = 1;
  int64 summary_price = 2;
}

message ReservationProductInfo {
  string name = 1;
  int64 count = 2;
  int64 price = 3;
}

message PaginationRequest {
  int64 last_id = 1 [(validate.rules).int64.gte = 0];
  int64 limit = 2 [(validate.rules).int64.lte = 5000];
}

message PharmacyID {
  int64 pharmacy_id = 1;
}

message Products {
  repeated Product products = 1;
}

message Product {
  string name = 1;
  int64 price = 2;
  int64 count = 3;
  string  position = 4;
  bool need_prescription_for_medicine = 5;
}

service PurchaseService {
  rpc ReserveItem(ReserveItemRequest) returns (google.protobuf.Empty);
  rpc CancelReserveItem(ReserveItemRequest) returns (google.protobuf.Empty);
  rpc GetReservation(GetReservationRequest) returns (Reservation);
  rpc BuyReservation(BuyReservationRequest) returns (google.protobuf.Empty);
  rpc GetAvailableProductsToReservation(PharmacyID) returns (Products);
}